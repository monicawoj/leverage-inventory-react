// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NotFoundPage /> should shallow render without breaking 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NotFoundPage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="hero-body"
      >
        <div
          className="container"
        >
          <h1
            className="title"
          >
            Sorry, page not found!
          </h1>
          <h2
            className="subtitle"
          >
            Let's get back to the beer,
            <Link
              className="has-text-link"
              replace={false}
              to="/"
            >
               shall we?
            </Link>
          </h2>
        </div>
      </div>,
      "className": "hero is-warning is-large is-centered has-text-centered",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
        >
          <h1
            className="title"
          >
            Sorry, page not found!
          </h1>
          <h2
            className="subtitle"
          >
            Let's get back to the beer,
            <Link
              className="has-text-link"
              replace={false}
              to="/"
            >
               shall we?
            </Link>
          </h2>
        </div>,
        "className": "hero-body",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="title"
            >
              Sorry, page not found!
            </h1>,
            <h2
              className="subtitle"
            >
              Let's get back to the beer,
              <Link
                className="has-text-link"
                replace={false}
                to="/"
              >
                 shall we?
              </Link>
            </h2>,
          ],
          "className": "container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sorry, page not found!",
              "className": "title",
            },
            "ref": null,
            "rendered": "Sorry, page not found!",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Let's get back to the beer,",
                <Link
                  className="has-text-link"
                  replace={false}
                  to="/"
                >
                   shall we?
                </Link>,
              ],
              "className": "subtitle",
            },
            "ref": null,
            "rendered": Array [
              "Let's get back to the beer,",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": " shall we?",
                  "className": "has-text-link",
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": " shall we?",
                "type": [Function],
              },
            ],
            "type": "h2",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="hero-body"
        >
          <div
            className="container"
          >
            <h1
              className="title"
            >
              Sorry, page not found!
            </h1>
            <h2
              className="subtitle"
            >
              Let's get back to the beer,
              <Link
                className="has-text-link"
                replace={false}
                to="/"
              >
                 shall we?
              </Link>
            </h2>
          </div>
        </div>,
        "className": "hero is-warning is-large is-centered has-text-centered",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="container"
          >
            <h1
              className="title"
            >
              Sorry, page not found!
            </h1>
            <h2
              className="subtitle"
            >
              Let's get back to the beer,
              <Link
                className="has-text-link"
                replace={false}
                to="/"
              >
                 shall we?
              </Link>
            </h2>
          </div>,
          "className": "hero-body",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className="title"
              >
                Sorry, page not found!
              </h1>,
              <h2
                className="subtitle"
              >
                Let's get back to the beer,
                <Link
                  className="has-text-link"
                  replace={false}
                  to="/"
                >
                   shall we?
                </Link>
              </h2>,
            ],
            "className": "container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Sorry, page not found!",
                "className": "title",
              },
              "ref": null,
              "rendered": "Sorry, page not found!",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Let's get back to the beer,",
                  <Link
                    className="has-text-link"
                    replace={false}
                    to="/"
                  >
                     shall we?
                  </Link>,
                ],
                "className": "subtitle",
              },
              "ref": null,
              "rendered": Array [
                "Let's get back to the beer,",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": " shall we?",
                    "className": "has-text-link",
                    "replace": false,
                    "to": "/",
                  },
                  "ref": null,
                  "rendered": " shall we?",
                  "type": [Function],
                },
              ],
              "type": "h2",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
